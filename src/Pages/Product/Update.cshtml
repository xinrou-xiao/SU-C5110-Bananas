@page "{id}"
@using ContosoCrafts.WebSite.Services
@using ContosoCrafts.WebSite.Models
@inject JsonFileProductService ProductService
@model ContosoCrafts.WebSite.Pages.Product.UpdateModel
@{
    ViewData["Title"] = "Update Anime";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb" style="background: none; color: white;">
        <li class="breadcrumb-item"><a href="/Index" style="color: white;">Home</a></li>
        <li class="breadcrumb-item"><a href="/Product" style="color: white;">Admin</a></li>
        <li class="breadcrumb-item active" aria-current="page">Update</li>
    </ol>
</nav>

<div class="container">
    <h2 class="white-font">Update Anime Information</h2>
    <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        @Html.HiddenFor(x => x.Product.Id)
        <input type="hidden" asp-for="Product.Id" />
        <input type="hidden" asp-for="Product.Maker" />

        <div class="form-group">
            <label class="white-font" asp-for="Product.Title">Title</label>
            <input asp-for="Product.Title" class="form-control" />
            <span asp-validation-for="Product.Title" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="white-font" asp-for="Product.Description">Description</label>
            <textarea asp-for="Product.Description" class="form-control"></textarea>
            <span asp-validation-for="Product.Description" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="white-font" asp-for="Product.Url">URL</label>
            <input asp-for="Product.Url" class="form-control" />
            <span asp-validation-for="Product.Url" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="white-font" asp-for="Product.Image">Image URL</label>
            <input asp-for="Product.Image" class="form-control" />
            <span asp-validation-for="Product.Image" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="white-font" asp-for="Product.Release">Release Year</label>
            <input asp-for="Product.Release" class="form-control" />
            <span asp-validation-for="Product.Release" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="white-font" asp-for="Product.Trailer">Trailer URL</label>
            <input asp-for="Product.Trailer" class="form-control" />
            <span asp-validation-for="Product.Trailer" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="white-font" asp-for="Product.Season">Season</label>
            <input asp-for="Product.Season" type="number" class="form-control" />
            <span asp-validation-for="Product.Season" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="white-font" asp-for="Product.Banner">Banner URL</label>
            <input asp-for="Product.Banner" class="form-control" />
            <span asp-validation-for="Product.Banner" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="white-font" asp-for="Product.Genre">Genre</label>
            <button class="btn btn-success custom-btn" type="button" id="create-genre">+</button>
            @foreach (var genre in Model.Product.Genre)
            {
                <div class="form-group form-inline">
                    <input class="form-control" class="form-control" value="@genre" name="Product.Genre"/>
                    <button class="btn btn-danger custom-btn remove-genre" type="button">-</button>
                    <span asp-validation-for="Product.Genre" class="text-danger"></span>
                </div>
            }
        </div>

        <div class="form-group">
            <label class="white-font" asp-for="Product.Genre">OTT platform</label>
            @foreach (OttTypeEnum platform in Enum.GetValues(typeof(OttTypeEnum)))
            {
                if (platform != 0)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="@((int)platform)" id="@platform" name="Product.Ott" @(Array.Exists(Model.Product.Ott, p => p == platform) ? "checked" : "")>
                        <label class="form-check-label white-font" for="@platform">
                            <a href="@platform.GetUrl()" target="_blank">
                                <img class="OTT-Icon" src="@platform.GetIcon()" alt="@platform">
                            </a>
                        </label>
                    </div>
                }
            }
        </div>

        <button type="submit" class="btn save-btn">Save Changes</button>
        <a asp-page="/Product/Index" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}