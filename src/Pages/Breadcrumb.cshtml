@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    // Retrieve the current HTTP request
    var request = HttpContextAccessor.HttpContext.Request;
    // Get the path of the current request and convert it to lowercase
    var path = request.Path.Value.ToLower();
    // Split the path into segments based on '/'
    var segments = path.Split('/', StringSplitOptions.RemoveEmptyEntries);
    // Initialize the breadcrumbs list with the Home link
    var breadcrumbs = new List<string> { "<a href='/'>Home</a>" };

    // Loop through each segment of the path
    for (int i = 0; i < segments.Length; i++)
    {
        var segment = segments[i];
        // Create the URL for the current breadcrumb
        var url = string.Join("/", segments.Take(i + 1));

        // Add a Product link if the segment contains "product"
        if (segment.Contains("product"))
        {
            breadcrumbs.Add($"<a href='/{url}'>Product</a>");
        }
        // Add a link for other segments, excluding "read", "update", and "delete"
        if (!segment.Contains("product"))
        {
            if (!segment.Contains("read"))
            {
                if (!segment.Contains("update"))
                {
                    if (!segment.Contains("delete"))
                    {
                        breadcrumbs.Add($"<a href='/{url}'>{segment}</a>");
                    }
                }
            }
        }
    }
}

<div>
    @foreach (var breadcrumb in breadcrumbs)
    {
        @Html.Raw(breadcrumb)
        // Add a separator between breadcrumbs, except for the last one
        @if (breadcrumb != breadcrumbs.Last())
        {
            <span style="color: white;"> | </span>
        }
    }
</div>