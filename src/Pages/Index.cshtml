@page
@using ContosoCrafts.WebSite.Components
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!-- Banner Carousel Section: A slideshow of anime banners that automatically cycles -->


<div id="animeCarousel" class="carousel slide" data-ride="carousel">
    <!-- Indicators for switching between banners -->
    <!-- Each 'li' represents an indicator dot for a specific slide (0-3) -->
    <ol class="carousel-indicators">
        <li data-target="#animeCarousel" data-slide-to="0" class="active"></li>
        <li data-target="#animeCarousel" data-slide-to="1"></li>
        <li data-target="#animeCarousel" data-slide-to="2"></li>
        <li data-target="#animeCarousel" data-slide-to="3"></li>
    </ol>

    <!-- Carousel inner container holding the banners -->
    <!-- Each 'carousel-item' represents a different banner in the slideshow -->
    <div class="carousel-inner">

        <!-- First banner -->
        <!-- 'active' class sets this as the default banner displayed first -->
        <div class="carousel-item active">
            <img class="d-block w-100" src="/Images/Banner_1.png" alt="First slide">
            <div class="carousel-caption d-none d-md-block">
                <h5>Jujutsu Kaisen</h5>
                <p>Yuji Itadori enters the dangerous world of curses after consuming a powerful cursed object, facing dark forces alongside skilled Jujutsu sorcerers.</p>
            </div>
        </div>

        <!-- Second banner -->
        <!-- This slide will appear after the first banner either through auto-rotation or manual control -->
        <div class="carousel-item">
            <img class="d-block w-100" src="/Images/Banner_2.png" alt="Second slide">
            <div class="carousel-caption d-none d-md-block">
                <h5>Blue Lock</h5>
                <p>In a quest to create Japan's ultimate striker, elite players compete in a cutthroat training facility, where only the strongest survive to claim their spot on the national team.</p>
            </div>
        </div>

        <!-- Third banner -->
        <div class="carousel-item">
            <img class="d-block w-100" src="/Images/Banner_3.png" alt="Third slide">
            <!-- Caption overlay on top of the image -->
            <div class="carousel-caption d-none d-md-block">
                <h5>Demon Slayer</h5>
                <p>Witness the rise of Tanjiro as he joins the Demon Slayer Corps, facing terrifying foes while uncovering the mysteries of the demon world</p>
            </div>
        </div>

        <!-- Fourth banner -->
        <div class="carousel-item">
            <img class="d-block w-100" src="/Images/Banner_4.png" alt="Fourth slide">
            <div class="carousel-caption d-none d-md-block">
                <h5>Haikyuu!!</h5>
                <p>An exhilarating journey of underdogs rising to the top�volleyball is more than just a game for Hinata and his team</p>
            </div>
        </div>
    </div>

    <!-- Navigation Controls: Allow users to move between banners -->
    <!-- Previous slide button -->
    <a class="carousel-control-prev" href="#animeCarousel" role="button" data-slide="prev">
        <!-- Icon for the previous button (left arrow) -->
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>

    <!-- Next slide button -->
    <a class="carousel-control-next" href="#animeCarousel" role="button" data-slide="next">
        <!-- Icon for the next button (right arrow) -->
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<!-- Audio Element for Background Music -->
<audio id="bg-music" autoplay loop>
    <!-- Specifying the path and type of audio file -->
    <source src="Audio/Warrior.mp3" type="audio/mp3">
    <!-- Fallback message for browsers that do not support the audio element -->
    Your browser does not support the audio element.
</audio>

<!-- Music Controls for Play/Pause and Next Song -->
<div id="audio-controls">
    <!-- Play Icon: Starts playing the currently loaded audio when clicked -->
    <i class="fas fa-play" onclick="playAudio()" id="play-icon" style="cursor: pointer;"></i>
    <!-- Pause Icon: Pauses the currently playing audio when clicked -->
    <i class="fas fa-pause" onclick="pauseAudio()" id="pause-icon" style="cursor: pointer;"></i>
    <span id="music-label">Music</span>
    <!-- Next Song Icon: Advances to the next song in the playlist when clicked -->
    <i class="fas fa-forward" onclick="nextSong()" id="next-song-icon"></i>
</div>

<!-- Floating Display for Current Song Name -->
<div id="song-name-display" style="position: fixed; bottom: 10px; right: 10px; background-color: rgba(0,0,0,0.7); color: white; padding: 5px 10px; border-radius: 5px; display: none;">
    <!-- Music Icon: Visual indicator that music is currently playing -->
    <i class="fas fa-music"></i>
    <!-- Element to Show Song Name -->
    <span id="song-name"></span>
</div>

@section Scripts {
    <script>
        // Get references to HTML elements
        var bgMusic = document.getElementById('bg-music');
        var songNameDisplay = document.getElementById('song-name-display');
        var songNameText = document.getElementById('song-name');
        var currentSongIndex = 0;

        // List of songs
        var songs = [
            { src: "Audio/kamado_tanjiro_no_uta.mp3", name: "Tanjiro" },
            { src: "Audio/Peach House.mp3", name: "Peach House" },
            { src: "Audio/Warrior.mp3", name: "Warrior" },
            { src: "Audio/Dragon Castle.mp3", name: "Dragon Castle" },
            { src: "Audio/Yugen.mp3", name: "Yugen" }
        ];

        // Load and play a song by index
        function loadSong(index) {
            bgMusic.src = songs[index].src;
            songNameText.textContent = songs[index].name;
            songNameDisplay.style.display = 'block';
            bgMusic.play();
        }

        // Play the audio
        function playAudio() {
            bgMusic.play();
        }

        // Pause the audio
        function pauseAudio() {
            bgMusic.pause();
        }

        // Move to the next song in the playlist
        function nextSong() {
            currentSongIndex = (currentSongIndex + 1) % songs.length;
            loadSong(currentSongIndex);
        }

        // Ensure the first song plays on page load
        document.addEventListener('DOMContentLoaded', function () {
            loadSong(currentSongIndex);
        });
    </script>
}


@functions {
    // Property to hold the current song name
    public string CurrentSongName { get; set; }
    // Property to hold the current song index
    public int CurrentSongIndex { get; set; } = 0;

    // Class to represent a song
    public class Song
    {
        public string Src { get; set; }
        public string Name { get; set; }
    }
}

@(await Html.RenderComponentAsync<ProductList>(RenderMode.ServerPrerendered))
<script src="_framework/blazor.server.js"></script>
<script>
    /// if url contains genre parameter, click on corresponding genre filter button.
    document.addEventListener('DOMContentLoaded', function () {
        var urlParams = new URLSearchParams(window.location.search);  // get current url
        var genre = urlParams.get('genre');  // get genre parameter value in url

        if (genre) {
            var attempts = 0;  // attempt times
            var maxAttempts = 50;  // maximun attempt times
            var interval = 100; // try every 100 ms

            // try every 100 ms, until event binded and clickable
            var checkInterval = setInterval(function () {
                attempts++;

                var buttons = document.querySelectorAll('.genre-unselected');  // fetch all genre button
                var success = false;  // if click is binded and clicked

                buttons.forEach(function (button) {
                    if (button.textContent.trim() === genre && button.classList.contains('genre-unselected')) {
                        button.click();
                        success = true;
                    }
                });

                if (success || attempts >= maxAttempts) {
                    clearInterval(checkInterval);
                }
            }, interval);
        }
    });
</script>
<script src="https://cdn.jsdelivr.net/npm/live2d-widget@3.1.4/lib/L2Dwidget.min.js"></script>
<script>
    L2Dwidget.init({
        "model": {
            "jsonPath": "https://cdn.jsdelivr.net/gh/evrstr/live2d-widget-models/live2d_evrstr/mai/model.json"
        },
        "display": {
            "position": "right",
            "width": 160,
            "height": 400,
            "hOffset": -1,
            "vOffset": -1
        },
        "mobile": {
            "show": false,
        }
    });
</script>