@page
@using ContosoCrafts.WebSite.Components
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}



<!-- Audio Element for Background Music -->
<audio id="bg-music" autoplay loop>
    <!-- Specifying the path and type of audio file -->
    <source src="Audio/Warrior.mp3" type="audio/mp3">
    <!-- Fallback message for browsers that do not support the audio element -->
    Your browser does not support the audio element.
</audio>

<!-- Music Controls for Play/Pause and Next Song -->
<div id="audio-controls">
    <!-- Play Icon: Starts playing the currently loaded audio when clicked -->
    <i class="fas fa-play" onclick="playAudio()" id="play-icon" style="cursor: pointer;"></i>
    <!-- Pause Icon: Pauses the currently playing audio when clicked -->
    <i class="fas fa-pause" onclick="pauseAudio()" id="pause-icon" style="cursor: pointer;"></i>
    <span id="music-label">Music</span>
    <!-- Next Song Icon: Advances to the next song in the playlist when clicked -->
    <i class="fas fa-forward" onclick="nextSong()" id="next-song-icon"></i>
</div>

<!-- Floating Display for Current Song Name -->
<div id="song-name-display" style="position: fixed; bottom: 10px; right: 10px; background-color: rgba(0,0,0,0.7); color: white; padding: 5px 10px; border-radius: 5px; display: none;">
    <!-- Music Icon: Visual indicator that music is currently playing -->
    <i class="fas fa-music"></i>
    <!-- Element to Show Song Name -->
    <span id="song-name"></span>
</div>

<!--JavaScript for Audio Control and Display Logic-->
<script>
    // Reference to the audio element in the HTML
    const bgMusic = document.getElementById('bg-music');
    // Reference to the floating display that shows the current song name
    const songNameDisplay = document.getElementById('song-name-display');
    // Text element for displaying the name of the currently playing song
    const songNameText = document.getElementById('song-name');
    // Variable to track the index of the currently playing song in the playlist
    let currentSongIndex = 0; 

    // List of songs with their file paths and names
    const songs = [
        { src: "Audio/Warrior.mp3", name: "Warrior" },
        { src: "Audio/Dragon Castle.mp3", name: "Dragon Castle" },
        { src: "Audio/Peach House.mp3", name: "Peach House" },
        { src: "Audio/kamado_tanjiro_no_uta.mp3", name: "Tanjiro" },
        { src: "Audio/Yugen.mp3", name: "Yugen" }
    ];

    // Load the selected song and update display
    function loadSong(index) {
        // Update the audio source to the file path of the selected song
        bgMusic.src = songs[index].src;
        // Update the text content to display the name of the currently selected song
        songNameText.textContent = songs[index].name;
        // Make the song name display visible to the user
        songNameDisplay.style.display = 'block';
        // Start playing the selected song
        bgMusic.play(); 
    }

    // Play the audio
    function playAudio() {
        // Call the play method on the audio element to start playback
        bgMusic.play();
    }

    // Pause the audio
    function pauseAudio() {
        // Call the pause method on the audio element to stop playback
        bgMusic.pause();
    }

    // Move to the next song in the playlist
    function nextSong() {
        // Increment the current song index; if it exceeds the length of the array, wrap around to 0
        currentSongIndex = (currentSongIndex + 1) % songs.length; 
        // Load the next song based on the updated index
        loadSong(currentSongIndex); 
    }

    // Load the first song on initial page load
    loadSong(currentSongIndex);</script>

<h1 style="color: white;">Banime</h1>
@(await Html.RenderComponentAsync<ProductList>(RenderMode.ServerPrerendered))

<script src="_framework/blazor.server.js"></script>